import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from "jspsych";
import * as ReactDOM from "react-dom/client";
import { {{pascalCase name}} } from "./plugin";
import * as React from "react";

const info = {
  name: "{{kebabCase name}}-plugin",
  parameters: {
  },
};

export type Info = typeof info;

export interface TrialData {
}

class {{pascalCase name}}Plugin implements JsPsychPlugin<Info> {
  static info = info;

  constructor(private jsPsych: JsPsych) {}

  trial(display_element: HTMLElement, trial: TrialType<Info>) {
    const root = ReactDOM.createRoot(display_element);

    /** Trial data is saved for every recalled word, instead of after one trial */
    const finishTrial = () => {
      root.unmount();
      this.jsPsych.finishTrial();
    };

    root.render(
      React.createElement({{pascalCase name}}, {
        finishTrial,
        trial,
        jsPsych: this.jsPsych,
      })
    );
  }
}

export default {{pascalCase name}}Plugin;
